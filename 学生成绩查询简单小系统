#include <stdio.h>
#include <stdlib.h>
int main(void)
{     //1，提示欢迎
	printf("欢迎使用本系统\n");  //在界面打印出欢迎
	  //2，开始循环
	while (1)                  //这个循环应用在全局
	{
		//3，输入一个数
		int value = -1;        //把-1赋值给value
		printf("请输入一个分数（0~100），输入-1推出系统：");  
		scanf_s("%d", &value);  //scanf通过键盘给程序中的变量赋值
		//4，检测这个数
		//-1，退出    if语句如果表达式为真，就执行下面的语句；如果表达式为假，就不执行下面的语句。
		if (-1 == value)        // ==等于符号 负一等于value
		{
			break;              //break；跳出循环，如果没有则成为死循环
		}//不管是 for 循环，还是 while 循环，或者是 do…while 循环，都可以用 break 跳出来，但是 break 只能跳出一层循环。当有多层循环嵌套的时候，break只能跳出“包裹”它的最里面的那一层循环，无法一次跳出所有循环
		
		//检测分数，不合法就重新输入
		if (value < 0 || value>100) //逻辑运算符||两边的条件只要有一个为真，其结果就为真；只要有一个结果为假，其结果就为假
		{
			//提示用户重新输入
			printf("输入指令非法，请从新输入\n");
			continue;//continue其作用为结束本次循环，即跳过循环体中下面尚未执行的语句，然后进行下一次是否执行循环的判定
		}
		//分数分级
		if (value < 60)
		{
			printf("不及格\n");
		}
		else if (value >= 60 && value < 70)//&&只有当两个子表达式都为 true 时，该表达式才为 true
		{
			printf("及格\n");             //if else语句 的意思就是：“如果”第一个成立，就执行第一个；“否则如果”第二个成立就执行第二个；“否则”就执行第三个。这个应该很好理解吧，
		}
		else if (value >= 70 && value < 80)
		{
			printf("良\n");
		}
		else if (value >= 80 && value < 90)
		{
			printf("优\n");
		}
		else
		{
			printf("完美\n");
		}

	}
	  //感谢使用
	printf("系统关闭，感谢您的使用\n");
	return 0;
}
